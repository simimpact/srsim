// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/simimpact/srsim/pkg/engine/modifier (interfaces: Eval)

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	info "github.com/simimpact/srsim/pkg/engine/info"
	key "github.com/simimpact/srsim/pkg/key"
)

// MockModifier is a mock of Eval interface.
type MockModifier struct {
	ctrl     *gomock.Controller
	recorder *MockModifierMockRecorder
}

// MockModifierMockRecorder is the mock recorder for MockModifier.
type MockModifierMockRecorder struct {
	mock *MockModifier
}

// NewMockModifier creates a new mock instance.
func NewMockModifier(ctrl *gomock.Controller) *MockModifier {
	mock := &MockModifier{ctrl: ctrl}
	mock.recorder = &MockModifierMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockModifier) EXPECT() *MockModifierMockRecorder {
	return m.recorder
}

// EvalModifiers mocks base method.
func (m *MockModifier) EvalModifiers(arg0 key.TargetID) info.ModifierState {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "EvalModifiers", arg0)
	ret0, _ := ret[0].(info.ModifierState)
	return ret0
}

// EvalModifiers indicates an expected call of EvalModifiers.
func (mr *MockModifierMockRecorder) EvalModifiers(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "EvalModifiers", reflect.TypeOf((*MockModifier)(nil).EvalModifiers), arg0)
}
