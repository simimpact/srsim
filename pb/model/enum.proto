syntax = "proto3";
package model;
option go_package = "github.com/simimpact/srsim/pkg/model";

// All possible stats that can be modified for a given target
enum Property {
  INVALID_PROP = 0;
  // HP = HP_BASE * (1 + HP_PERCENT) + HP_FLAT + HP_CONVERT
  HP_BASE = 1;
  HP_PERCENT = 2;
  HP_FLAT = 3;
  HP_CONVERT = 4;
  // ATK = ATK_BASE * (1 + ATK_PERCENT) + ATK_FLAT + ATK_CONVERT
  ATK_BASE = 5;
  ATK_PERCENT = 6;
  ATK_FLAT = 7;
  ATK_CONVERT = 8;
  // DEF = DEF_BASE * (1 + DEF_PERCENT) + DEF_FLAT + DEF_CONVERT
  DEF_BASE = 9;
  DEF_PERCENT = 10;
  DEF_FLAT = 11;
  DEF_CONVERT = 12;
  // SPD = SPD_BASE * (1 + SPD_PERCENT) + SPD_FLAT + SPD_CONVERT
  SPD_BASE = 13;
  SPD_PERCENT = 14;
  SPD_FLAT = 15;
  SPD_CONVERT = 16;
  // Crit
  CRIT_CHANCE = 17;
  CRIT_DMG = 18;
  // Energy Regen
  ENERGY_REGEN = 19;
  ENERGY_REGEN_CONVERT = 20;
  // Effect Hit Rate
  EFFECT_HIT_RATE = 21;
  EFFECT_HIT_RATE_CONVERT = 22;
  // Effect RES
  EFFECT_RES = 23;
  EFFECT_RES_CONVERT = 24;
  // Increases heal strength that are created by target
  HEAL_BOOST = 25;
  HEAL_BOOST_CONVERT = 26;
  // Increases heal strength that are applied to target
  HEAL_TAKEN = 27;
  // Increases shield strength that are created by target
  SHIELD_BOOST = 28;
  // Increases shield strength that are applied to target
  SHIELD_TAKEN = 29;
  // AGGRO = AGGRO_BASE * (1 + AGGRO_PERCENT) + AGGRO_FLAT
  AGGRO_BASE = 30;
  AGGRO_PERCENT = 31;
  AGGRO_FLAT = 32;
  // Break Effect
  BREAK_EFFECT = 33;
  // Damage Resistances (RES = ALL_DMG_RES + ELEMENT_DMG_RES)
  ALL_DMG_RES = 34;
  PHYSICAL_DMG_RES = 35;
  FIRE_DMG_RES = 36;
  ICE_DMG_RES = 37;
  THUNDER_DMG_RES = 38;
  QUANTUM_DMG_RES = 39;
  IMAGINARY_DMG_RES = 40;
  WIND_DMG_RES = 41;
  // Elemental Penetrates
  PHYSICAL_PEN = 42;
  FIRE_PEN = 43;
  ICE_PEN = 44;
  THUNDER_PEN = 45;
  QUANTUM_PEN = 46;
  IMAGINARY_PEN = 47;
  WIND_PEN = 48;
  // Damage Taken Boost (TAKEN = ALL_DMG_TAKEN + ELEMENT_DMG_TAKEN)
  ALL_DMG_TAKEN = 49;
  PHYSICAL_DMG_TAKEN = 50;
  FIRE_DMG_TAKEN = 51;
  ICE_DMG_TAKEN = 52;
  THUNDER_DMG_TAKEN = 53;
  QUANTUM_DMG_TAKEN = 54;
  IMAGINARY_DMG_TAKEN = 55;
  WIND_DMG_TAKEN = 56;
  // DMG% increases (DMG% = ALL_DMG% + ELEMENT_DMG% + DOT_DMG%)
  ALL_DMG_PERCENT = 57;
  DOT_DMG_PERCENT = 58;
  FIRE_DMG_PERCENT = 59;
  ICE_DMG_PERCENT = 60;
  THUNDER_DMG_PERCENT = 61;
  QUANTUM_DMG_PERCENT = 62;
  IMAGINARY_DMG_PERCENT = 63;
  WIND_DMG_PERCENT = 64;
  PHYSICAL_DMG_PERCENT = 65;
  // Stance DMG% increase (damage to toughness bar, not break effect)
  ALL_STANCE_DMG_PERCENT = 66;
  // Multiplicative DMG reduction CURRENT_DMG_REDUCE *= (1 - ADDED_DMG_REDUCE)
  // DMG_REDUCE from target attacked, FATIGUE from attacker
  ALL_DMG_REDUCE = 90;
  FATIGUE = 91;
  MIN_FATIGUE = 92; // TODO: unnecessary?

  // OMITTED (Stance Break = reducing toughness bar. Break Damage = Break Effect):
  // - CRIT_RES
  // - CRIT_CHANCE_CONVERT
  // - CRIT_DMG_CONVERT
  // - STANCE_BREAK_RES
  // - STANCE_BREAK_TAKEN
  // - ELEMENT_ABSORB
  // - BREAK_EFFECT_CONVERT
}

enum BehaviorFlag {
  INVALID_FLAG = 0;
  DISABLE_ACTION = 1;
  BREAK = 2;
  BREAK_EXTEND = 3;
  reserved 4 to 99;

  // STATS_ are the behavior flags primarily used for DebuffRES
  STAT_CTRL = 100;
  STAT_CTRL_FROZEN = 101;
  STAT_CTRL_STUN = 102;
  STAT_DOT = 103;
  STAT_DOT_POISON = 104;
  STAT_DOT_ELECTRIC = 105;
  STAT_DOT_BLEED = 106;
  STAT_DOT_BURN = 107;
  STAT_SPEED_DOWN = 108;
  STAT_FATIGUE = 110;
  STAT_DEF_DOWN = 109;
  STAT_CONFINE = 111;
  STAT_BURST = 112;
  STAT_SPEED_UP = 113;
  STAT_ATTACH_WEAKNESS = 114;
  STAT_ENTANGLE = 115;
}

enum StatusType {
  UNKNOWN_STATUS = 0;
  STATUS_BUFF = 1;
  STATUS_DEBUFF = 2;
}

enum DispelOrder {
  INVALID_DISPEL_ORDER = 0;
  LAST_ADDED = 1;
  FIRST_ADDED = 2;
  RANDOM = 3;
}

enum Path {
  INVALID_PATH = 0;
  PRESERVATION = 1;
  HUNT = 2;
  ERUDITION = 3;
  NIHILITY = 4;
  DESTRUCTION = 5;
  HARMONY = 6;
  ABUNDANCE = 7;
}

enum DamageType {
  INVALID_DAMAGE_TYPE = 0;
  PHYSICAL = 1;
  FIRE = 2;
  ICE = 3;
  THUNDER = 4;
  WIND = 5;
  QUANTUM = 6;
  IMAGINARY = 7;
}

enum AttackType {
  INVALID_ATTACK_TYPE = 0;
  NORMAL = 1;
  SKILL = 2;
  ULT = 3;
  DOT = 4;
  PURSUED = 5;
  MAZE = 6;
  MAZE_NORMAL = 7;
  INSERT = 8;
  ELEMENT_DAMAGE = 9;
}

enum DamageFormula {
  INVALID_DAMAGE_FORMULA = 0;
  BY_ATK = 1;
  BY_DEF = 2;
  BY_MAX_HP = 3;
  BY_BREAK_DAMAGE = 4;
}

enum HealFormula {
  INVALID_HEAL_FORMULA = 0;
  BY_HEALER_ATK = 1;
  BY_HEALER_DEF = 2;
  BY_HEALER_MAX_HP = 3;
  BY_TARGET_MAX_HP = 4;
  BY_TARGET_LOST_HP = 5;
}

enum ShieldFormula {
  INVALID_SHIELD_FORMULA = 0;
  SHIELD_BY_SHIELDER_ATK = 1;
  SHIELD_BY_SHIELDER_DEF = 2;
  SHIELD_BY_SHIELDER_MAX_HP = 3;
  SHIELD_BY_TARGET_MAX_HP = 4;
  SHIELD_BY_SHIELDER_TOTAL_SHIELD = 5;
}

enum ModifyHPRatioType {
  INVALID_RATIO_TYPE = 0;
  MAX_HP = 1;
  CURRENT_HP = 2;
}

enum TargetType {
  INVALID_TARGET_TYPE = 0;
  SELF = 1;
  ALLIES = 2;
  ENEMIES = 3;
}

enum TerminationReason {
  INVALID_TERMINATION = 0;
  BATTLE_LOSS = 1;
  BATTLE_WIN = 2;
  TIMEOUT = 3;
}